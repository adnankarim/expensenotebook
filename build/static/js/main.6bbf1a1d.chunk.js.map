{"version":3,"sources":["Components/UI/AddExpenseItem.js","Components/UI/DataTable/DataTable.js","Components/UI/Chart/Chart.js","Components/UI/FloatingNav/FloatingNav.js","App.js","serviceWorker.js","index.js"],"names":["AddExpenseItem","props","onSubmit","addExpenseItem","ClassName","className","type","id","name","value","description","onChange","handleInputChange","placeholder","required","for","cost","checked","category","class","time","title","color","href","DataTable","expenseItems","map","expenseItem","onClick","deleteExpenseItem","Chart","data","labels","datasets","label","categoryCost","backgroundColor","option","tooltips","callbacks","tooltipItem","dataset","datasetIndex","total","_meta","Object","keys","currentValue","index","parseFloat","toFixed","display","text","fontSize","legend","position","displayChart","SelectedDay","options","FloatingNav","state","isOpen","slideSpeed","direction","spacing","this","iconResting","style","nativeColor","iconActive","setState","size","icon","Money","colorAddPassed","handleAddChange","PieChart","colorPiePassed","handlePieChange","Component","App","userId","currentStatus","bind","Calculator","event","target","preventDefault","length","expenseItemsList","filter","item","filterDays","count","i","Number","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6bbf1a1d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './AddExpenseItem.css'\r\n\r\nconst AddExpenseItem=(props)=> {\r\n    return (\r\n      <form onSubmit={props.addExpenseItem}>\r\n        <div ClassName='main'>\r\n              <div className=\"main-panel\">\r\n\r\n              <div className=\"input\">\r\n          <div className=\"input__description\">\r\n            <input type=\"text\" id=\"description\" name=\"description\" value={props.description} onChange={props.handleInputChange}\r\n               className=\"add__description form__input\" placeholder=\"Add description\" required />\r\n            <label for=\"description\" className=\"form__label\">Add a description</label>\r\n          </div>\r\n          <div className=\"input__value\">\r\n            <input type=\"number\" id=\"value\" name=\"cost\" value={props.cost} onChange={props.handleInputChange} required className=\"add__value form__input\" placeholder=\"Cost \" />\r\n            <label for=\"value\" className=\"form__label\">Cost</label>\r\n          </div>\r\n          <div className=\"input__category\">\r\n            <div className=\"radio_item\">\r\n          <input type=\"radio\" name='category' value=\"Food\" id=\"food\"  onChange={props.handleInputChange}  checked={props.category === \"Food\"} className=\"category-radio\" />\r\n            <label for=\"food\">Food</label>\r\n            </div>\r\n          <div className=\"radio_item\">\r\n          <input type=\"radio\" name='category' value=\"Entertainment\" id=\"entertainment\" onChange={props.handleInputChange} checked={props.category === \"Entertainment\"} className=\"category-radio\" />\r\n            <label for=\"entertainment\">Entertainment</label>\r\n          </div> \r\n          <div className=\"radio_item\">\r\n          <input type=\"radio\" name='category' value=\"Utility\" id=\"utility\" onChange={props.handleInputChange} checked={props.category === \"Utility\"} className=\"category-radio\" />\r\n            <label for=\"utility\">Utility</label>\r\n          </div> \r\n          \r\n           \r\n         \r\n            <div className=\"radio_item\">\r\n          <input type=\"radio\" name='category' value=\"Other\" id=\"other\" onChange={props.handleInputChange} checked={props.category === \"Other\"} className=\"category-radio\" />\r\n            <label for=\"other\">Other</label>\r\n\r\n\r\n            </div>\r\n           \r\n\r\n          </div>\r\n        \r\n          \r\n        </div>\r\n             \r\n        <div class=\"input__last\">\r\n           \r\n    <div className=\"input_date_container\">\r\n    <label className=\"form_label\" for=\"time\"></label>\r\n\r\n    <input required className=\"form__input\" type=\"date\" id=\"time\"\r\n       name=\"time\"  value={props.time} onChange={props.handleInputChange} />\r\n\r\n        \r\n        </div>\r\n        <button   type=\"submit\" className=\"input_submit_container\">\r\n        <div  title=\"Add Expense Item\" className=\"input__submit\">\r\n        <svg  color=\"red\" class=\"icon icon-checkmark\">\r\n          <use href=\"#icon-checkmark\"/>\r\n          \r\n          </svg>\r\n         </div>\r\n        </button>\r\n        \r\n        \r\n        \r\n        </div>\r\n             \r\n              </div>\r\n        \r\n         \r\n        \r\n        \r\n            \r\n        </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddExpenseItem;\r\n","import React from 'react'\r\nimport './datatable.css'\r\n\r\n\r\n\r\n\r\n\r\nconst DataTable=(props) =>{\r\n    return (\r\n        <div ClassName='main'>\r\n              <div className=\"main-panel\">\r\n            \r\n                  { props.expenseItems.map((expenseItem) => (\r\n              <div class=\"panel\">\r\n              <div class=\"panel__item panel__item-expense\" id={expenseItem.id}>\r\n                  <div class=\"panel__item__details\">\r\n                      <div class=\"panel__item__details-name\">{expenseItem.description}</div>\r\n                  </div>\r\n                  <div class=\"panel__item__category\">\r\n                      <div class=\"panel__item__category-name\">{expenseItem.category}</div>\r\n                  </div>\r\n                  <div class=\"panel__item__category\">\r\n                      <div class=\"panel__item__category-name\">{expenseItem.time}</div>\r\n                  </div>\r\n                      <div class=\"panel__item__value\">\r\n                          <div class=\"panel__item__value-number\">Rs. {expenseItem.cost}</div>\r\n                      </div>\r\n                          <button class=\"item__delete--btn\" onClick={() => props.deleteExpenseItem(expenseItem.id) }>\r\n                              \r\n                              <div title=\"Delete Item\">\r\n                               <svg   class=\"icon_cr icon-cross\">\r\n                                   <use href=\"#icon-cross\"/>\r\n                                </svg>\r\n                                </div>\r\n                          </button>\r\n                    </div>\r\n              </div>\r\n                  ))\r\n                 }\r\n                   \r\n    \r\n    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DataTable\r\n\r\n","import React from 'react'\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\n\r\nconst Chart =(props)=> {\r\n   \r\n  \r\n\r\n    const data ={\r\n        labels: ['Food', 'Entertainment', 'Utility', 'Other'],\r\n        datasets:[\r\n          {\r\n            label:'Category',\r\n            data:props.categoryCost,\r\n            backgroundColor:[\r\n              \"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\"\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      const option = {\r\n        tooltips: {\r\n          callbacks: {\r\n            label: function(tooltipItem, data) {\r\n              var dataset = data.datasets[tooltipItem.datasetIndex];\r\n              var meta = dataset._meta[Object.keys(dataset._meta)[0]];\r\n              var total = meta.total;\r\n              var currentValue = dataset.data[tooltipItem.index];\r\n              var percentage = parseFloat((currentValue/total*100).toFixed(1));\r\n              return currentValue + ' (' + percentage + '%)';\r\n            },\r\n            title: function(tooltipItem, data) {\r\n              return data.labels[tooltipItem[0].index];\r\n            }\r\n          }\r\n        },title:{\r\n            display:true,\r\n            text:'Displaying Cost By Category'  ,\r\n            fontSize:25\r\n          },\r\n          legend:{\r\n            display:true,\r\n            position:'right'\r\n          }\r\n      }\r\n        return (\r\n            <div ClassName='main'>\r\n              <div className=\"main-panel\">\r\n              \r\n                    <form onSubmit={props.displayChart}>\r\n\r\n              <div class=\"input__last\">\r\n           \r\n           <div className=\"input_date_container\">\r\n           <label className=\"form_label\" for=\"time\"> Select Date to Display Chart </label>\r\n       \r\n           <input required className=\"form__input\" type=\"date\" id=\"SelectedDay\"\r\n              name=\"SelectedDay\"  value={props.SelectedDay} onChange={props.handleInputChange} />\r\n          \r\n               \r\n               </div>\r\n\r\n               <button  title=\"Display by that day\" type=\"submit\"  className=\"input_submit_container\">\r\n               <div className=\"input__submit\">\r\n               <svg  color=\"red\" class=\"icon icon-checkmark\">\r\n                 <use href=\"#icon-checkmark\"/>\r\n                 \r\n                 </svg>\r\n                </div>\r\n               </button>\r\n            \r\n               </div>\r\n\r\n               </form>\r\n            { \r\n            \r\n            (props.categoryCost[0]==0 && props.categoryCost[1]==0 && props.categoryCost[2]==0 && props.categoryCost[3]==0) ? <h1>No Data Found</h1> :         \r\n                      <Pie\r\n            data={data}\r\n            options={option}\r\n       />\r\n\r\n\r\n           } \r\n              </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    export default Chart;\r\n\r\n","import React, { Component } from 'react'\r\nimport {\r\n    FloatingMenu,\r\n    MainButton,\r\n    ChildButton,\r\n  } from 'react-floating-button-menu';\r\n  import MdAdd from '@material-ui/icons/Add';\r\n  import MdClose from '@material-ui/icons/Clear';\r\n  import {PieChart,Money} from '@material-ui/icons';\r\n   import './FloatingNav.css'\r\n\r\n \r\n\r\nexport default class FloatingNav extends Component {\r\n   constructor(props) {\r\n       super(props)\r\n   \r\n       this.state = {\r\n\r\n                 \r\n            isOpen: false,\r\n             \r\n       }\r\n    \r\n   }\r\n   \r\n   \r\n   \r\n    render() {\r\n        return (\r\n            <div class=\"float-wrapper\">\r\n               <FloatingMenu\r\n      slideSpeed={500}\r\n      direction=\"right\"\r\n      spacing={8}\r\n      isOpen={this.state.isOpen}\r\n    >\r\n     \r\n      <MainButton\r\n         title=\"Navigation Menu\"\r\n        iconResting={<MdAdd style={{ fontSize: 20 }} nativeColor=\"black\" />}\r\n        iconActive={<MdClose title=\"Close Navigation Menu\" style={{ fontSize: 20 }} nativeColor=\"white\" />}\r\n        backgroundColor=\"black\"\r\n        onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n        size={56}\r\n      />\r\n       <ChildButton\r\n        icon={<Money style={{ fontSize: 20, color:`${this.state.colorAddPassed}`}} nativeColor=\"white\" />}\r\n        backgroundColor=\"white\"\r\n        size={40}\r\n        title=\"Add Data\"\r\n        \r\n        onClick={ this.props.handleAddChange }\r\n      />\r\n      <ChildButton\r\n        title=\"Display Piechart\"\r\n        icon={<PieChart style={{ fontSize: 20,color:`${this.state.colorPiePassed}` }} nativeColor=\"black\" />}\r\n        backgroundColor=\"white\"\r\n        size={40}\r\n        \r\n        onClick={this.props.handlePieChange }\r\n      />\r\n      \r\n    </FloatingMenu> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n  \r\n  \r\n    ","import React,{Component} from 'react';\nimport './App.css';\nimport AddExpenseItem from './Components/UI/AddExpenseItem';\nimport DataTable from './Components/UI/DataTable/DataTable';\nimport Chart from './Components/UI/Chart/Chart';\nimport FloatingNav from './Components/UI/FloatingNav/FloatingNav';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    \n    this.state = {\n      id: null,\n      userId: 1,\n      currentStatus:'add',\n      description: '',\n      cost: '',\n      SelectedDay:'',\n      category:'Other',\n      time:'',\n      categoryCost: [],\n      expenseItem: {},\n      expenseItems: [],\n\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.addExpenseItem = this.addExpenseItem.bind(this);\n    this.deleteExpenseItem = this.deleteExpenseItem.bind(this);\n    this.displayChart = this.displayChart.bind(this);\n    this.Calculator = this.Calculator.bind(this);\n    this.handlePieChange = this.handlePieChange.bind(this);\n    this.handleAddChange = this.handleAddChange.bind(this);\n  }\n\n handlePieChange(){\n   this.setState({currentStatus:'pie'})\n\n }\n handleAddChange(){\nthis.setState({currentStatus:'add'})\n }\n  handleInputChange(event) {\n    \n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n \n    this.setState({\n      [name]:value\n    })\n  }\n  addExpenseItem(event){\n    event.preventDefault()\n    if (!this.state.description) return;\n    const expenseItem = {\n      id: this.state.expenseItems.length + 1,\n      description: this.state.description,\n      cost: this.state.cost,\n      time:this.state.time,\n      category:this.state.category,\n      userId: this.state.userId,\n    };\n  \n    this.setState({\n      description: '',\n      cost: '',\n      category: 'Other',\n      expenseItem: expenseItem,\n      expenseItems: [...this.state.expenseItems, expenseItem]\n    })\n  }\n  deleteExpenseItem(id) {\n    const expenseItemsList = this.state.expenseItems.filter( item => item.id !== id );\n    this.setState({expenseItems: expenseItemsList});\n  }\n   Calculator() {\n    const filterDays = this.state.expenseItems.filter( item => item.time === this.state.SelectedDay );\n    var count=[0,0,0,0]; \n       for( var i=0;i<filterDays.length;i++){\n         \n           if(filterDays[i].category==='Food'){\n             count[0]=Number(count[0])+Number(filterDays[i].cost);\n           }\n             else if (filterDays[i].category==='Entertainment'){\n              count[1]=Number(count[1])+Number(filterDays[i].cost);\n\n             } \n             else if (filterDays[i].category==='Utility'){\n              count[2]=Number(count[2])+Number(filterDays[i].cost);\n\n             }\n             else if(filterDays[i].category==='Other')\n             {\n              count[3]=Number(count[3])+Number(filterDays[i].cost);\n\n             }\n            \n            }\n          this.setState({categoryCost:[...count,]});\n          \n  }\n  displayChart(event){\n    event.preventDefault();\n    this.Calculator();\n          }\n\n        \n \n  \n  \n\n  render(){\n    const { cost, description,time,category, expenseItems } = this.state;\n\n\nreturn (\n  <div >\n      \n      \n       <FloatingNav\n           handleInputChange={this.handleInputChange}\n         currentStatus={this.state.currentStatus}\n         handleAddChange={this.handleAddChange}\n         handlePieChange={this.handlePieChange}\n         \n       \n       />\n\n      {\n      this.state.currentStatus==='add'?\n     \n     \n     ( <div> <AddExpenseItem\n        description={description}\n        cost={cost} \n        time={time}\n        category={category}\n        handleInputChange={this.handleInputChange} \n        addExpenseItem={this.addExpenseItem}\n       \n      />\n      \n      <DataTable \n        \n        expenseItems= {expenseItems} \n        deleteExpenseItem={this.deleteExpenseItem}\n      />\n      </div>\n     ) : this.state.currentStatus==='pie'?\n      (<Chart  categoryCost={this.state.categoryCost}\n              displayChart={this.displayChart}\n              handleInputChange={this.handleInputChange} \n      \n      />)\n      : this.setState({currentStatus:'add'})\n     }\n    \n   \n  </div>\n);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}